// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gridView component renders correctly 1`] = `
<div
  className="gridView"
>
  <Row
    tag="div"
  >
    <Col
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <Select
        addLabelText="Add \\"{label}\\"?"
        arrowRenderer={[Function]}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        className="dropdownPlanAnalysis"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={false}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={false}
        labelKey="name"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={false}
        noResultsText="No results found"
        onBlurResetsInput={true}
        onChange={[Function]}
        onCloseResetsInput={true}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            "test1",
            "test2",
          ]
        }
        pageSize={5}
        placeholder="Plan Analysis Lens"
        required={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={false}
        tabSelectsValue={true}
        valueComponent={[Function]}
        valueKey="id"
      />
    </Col>
  </Row>
  <Row
    tag="div"
  >
    <Col
      tag="div"
      widths={
        Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ]
      }
      xs="12"
    >
      <div
        className="gridContainer ag-fresh"
      >
        <AgGridReact
          columnDefs={
            Array [
              Object {
                "cellRendererFramework": [Function],
                "field": "accountgroupname",
                "headerName": "Node Name",
                "pinned": "left",
                "sortingOrder": Array [
                  null,
                  null,
                ],
                "width": 350,
              },
              Object {
                "field": "aa_category",
                "headerName": "Asset Category",
                "pinned": "left",
                "sortingOrder": Array [
                  "asc",
                  "desc",
                ],
                "width": 184,
              },
              Object {
                "field": "accountgroupname",
                "headerName": "Asset Class Alias",
                "pinned": "left",
                "sortingOrder": Array [
                  "asc",
                  "desc",
                ],
                "width": 350,
              },
              Object {
                "field": "aa_model_benchmark",
                "headerName": "AAMB",
                "pinned": "left",
                "sortingOrder": Array [
                  "asc",
                  "desc",
                ],
                "width": 200,
              },
              Object {
                "field": "policy_value",
                "headerName": "Policy",
                "sortingOrder": Array [
                  "asc",
                  "desc",
                ],
                "valueFormatter": [Function],
                "width": 200,
              },
              Object {
                "field": "actual_mv",
                "headerComponentFramework": [Function],
                "headerName": "Actual",
                "sortingOrder": Array [
                  "asc",
                  "desc",
                ],
                "valueFormatter": [Function],
                "width": 200,
              },
            ]
          }
          enableSorting={true}
          headerHeight="35"
          onCellEditingStopped={[Function]}
          onGridReady={[Function]}
          rowData={Array []}
        />
        <Connect(NodeNameCellMenu) />
        <Connect(ValueHeaderMenu) />
        <Connect(MixHeaderMenu) />
      </div>
    </Col>
  </Row>
</div>
`;
